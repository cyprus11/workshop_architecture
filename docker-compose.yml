services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    volumes:
      - db:/var/lib/postgresql/data
  elasticsearch:
    image: docker.io/bitnami/elasticsearch:8
    ports:
      - '9200:9200'
    volumes:
      - elastic_lib:/usr/share/elasticsearch7/data
  web:
    tty: true
    stdin_open: true
    image: library
    container_name: library
    build:
      context: .
    env_file:
      ".env"
    command: >
      sh -c "rm -f tmp/pids/server.pid &&
             bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/rails
      - "$DOCKER_COMPOSE_ARCHIVE_FOLDER:/rails/db/data"
    networks:
      - default
    ports:
      - "8080:3000"
    depends_on:
      - db
      - elasticsearch
    environment:
      RAILS_LOG_TO_STDOUT: 'yes'
      PAGER: 'more'
      POSTGRES_HOST: 'db'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'

  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

  console:
    image: docker.redpanda.com/redpandadata/console
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:9092"]
    ports:
      - 8090:8080
    depends_on:
      - kafka

volumes:
  db:
  elastic_lib:
